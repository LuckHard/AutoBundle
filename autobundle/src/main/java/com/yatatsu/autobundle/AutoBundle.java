package com.yatatsu.autobundle;

import android.app.Fragment;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

/**
 * Injection helper.
 * resolve each binding class for target.
 */
public final class AutoBundle {

    /**
     * tag for {@link Log}
     */
    private static final String TAG = "AutoBundle";

    /**
     * {@link AutoBundleBinder} implementation class will be generated by apt.
     * So if {@link Arg} does not used, impl class may not exist.
     */
    static final String BINDER_CLASS_NAME = "com.yatatsu.autobundle.AutoBundleBindingDispatcher";

    /**
     * static instance will load at the first time static method called.
     */
    private static AutoBundleBinder autoBundleBinder;

    private AutoBundle() {
        throw new AssertionError("no instances");
    }

    /**
     * assign arguments to target fields.
     *
     * target may be {@link android.app.Activity},
     * {@link android.content.BroadcastReceiver},
     * {@link android.app.Service},
     * {@link android.app.Fragment} or these compatibility class.
     *
     * @param target target which has {@link Arg} annotated fields.
     * @param args source bundle.
     */
    public static void bind(Object target, Bundle args) {
        AutoBundleBinder binder = findBinder();
        if (binder != null) {
            binder.bind(target, args);
        } else {
            Log.w(TAG, "AutoBundle cannot resolve binding with " + target.getClass());
        }
    }

    /**
     * assign to target fields from {@link Intent#getExtras()}.
     *
     * target may be {@link android.app.Activity},
     * {@link android.content.BroadcastReceiver},
     * {@link android.app.Service} or these compatibility class.
     *
     * @param target target which has {@link Arg} annotated fields.
     * @param intent source bundle.
     */
    public static void bind(Object target, Intent intent) {
        AutoBundleBinder binder = findBinder();
        if (binder != null) {
            binder.bind(target, intent);
        } else {
            Log.w(TAG, "AutoBundle cannot resolve binding with " + target.getClass());
        }
    }

    /**
     * assign to target fields from {@link Fragment#getArguments()}.
     *
     * target may be {@link Fragment} or compat.
     *
     * @param target target Fragment which has {@link Arg} annotated fields.
     */
    public static void bind(Object target) {
        AutoBundleBinder binder = findBinder();
        if (binder != null) {
            binder.bind(target);
        } else {
            Log.w(TAG, "AutoBundle cannot resolve binding with " + target.getClass());
        }
    }

    /**
     * set arguments from source fields.
     *
     * target may be {@link android.app.Activity},
     * {@link android.content.BroadcastReceiver},
     * {@link android.app.Service},
     * {@link android.app.Fragment} or these compatibility class.
     *
     * @param source source instance which has {@link Arg} annotated fields.
     * @param args target bundle.
     */
    public static void pack(Object source, Bundle args) {
        AutoBundleBinder binder = findBinder();
        if (binder != null) {
            binder.pack(source, args);
        } else {
            Log.w(TAG, "AutoBundle cannot resolve binding with " + source.getClass());
        }
    }

    static AutoBundleBinder findBinder() {
        if (autoBundleBinder == null) {
            try {
                Class<?> binderClass = Class.forName(BINDER_CLASS_NAME);
                autoBundleBinder = (AutoBundleBinder) binderClass.newInstance();
            } catch (Exception e) {
                Log.e(TAG, "binder class not found.", e);
            }
        }
        return autoBundleBinder;
    }
}